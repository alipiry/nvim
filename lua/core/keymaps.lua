local map = vim.keymap.set

map("n", "<C-z>", "<cmd>qa!<CR>", { desc = "Quit Neovim" })
map("n", "<C-s>", "<cmd>w<CR>", { desc = "Save file" })
map("n", "<leader>sn", "<cmd>w<CR>", { desc = "Save file without formatting" })
map("n", "<C-q>", "<cmd>q<CR>", { desc = "Quit file" })
map("n", "<C-d>", "<C-d>zz", { desc = "Scroll down and center cursor" })
map("n", "<C-u>", "<C-u>zz", { desc = "Scroll up and center cursor" })
map("n", "n", "nzzzv", { desc = "Find next and center" })
map("n", "N", "Nzzzv", { desc = "Find previous and center" })
map("n", "<C-h>", "<C-w>h", { desc = "Move to left pane" })
map("n", "<C-l>", "<C-w>l", { desc = "Move to right pane" })
map("n", "<C-j>", "<C-w>j", { desc = "Move to below pane" })
map("n", "<C-k>", "<C-w>k", { desc = "Move to upper pane" })
map("n", "<leader>x", "<cmd>bd<CR>", { desc = "Close current buffer" })
map("n", "<leader>v", "<C-w>v", { desc = "split window vertically" })
map("n", "<leader>h", "<C-w>s", { desc = "split window horizontally" })
map("n", "<leader>se", "<C-w>=", { desc = "make windows equal width" })
map("v", "p", '"_dP', { desc = "Paste from last yanked text" })
map("n", ";", ":", { desc = "CMD enter command mode" })

map("n", "gD", vim.lsp.buf.definition, { desc = "Go to definition (builtin LSP)" })
map("n", "gR", vim.lsp.buf.references, { desc = "Go to references (builtin LSP)" })
map("n", "gI", vim.lsp.buf.implementation, { desc = "Go to implementation (builtin LSP)" })
